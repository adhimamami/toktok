name: Secure RDP via Ngrok (Stable Version)

on:
  workflow_dispatch:

jobs:
  rdp_setup:
    runs-on: windows-latest

    steps:
    - name: Cleanup Previous Setup
      run: |
        Remove-Item -Path ngrok, ngrok.zip -Recurse -Force -ErrorAction SilentlyContinue
      shell: pwsh

    - name: Download & Extract Ngrok
      run: |
        # Versi alternatif dari GitHub (lebih stabil)
        $ngrokUrl = "https://github.com/wez/ngrok/releases/download/ngrok-v3/ngrok-v3-windows-amd64.zip"
        
        # Download
        Invoke-WebRequest -Uri $ngrokUrl -OutFile ngrok.zip -TimeoutSec 30
        
        # Buat directory dan ekstrak
        New-Item -Path ngrok -ItemType Directory -Force
        Expand-Archive -Path ngrok.zip -DestinationPath ngrok -Force
        
        # Validasi
        if (-not (Test-Path ngrok/ngrok.exe)) {
          Write-Error "‚ùå Ekstraksi Ngrok gagal!"
          exit 1
        }
        Write-Host "‚úÖ Ngrok berhasil diinstall"
      shell: pwsh

    - name: Configure RDP
      run: |
        # Nonaktifkan NLA
        reg add "HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f

        # Aktifkan RDP
        Set-ItemProperty -Path "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        
        # Firewall Rules
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        New-NetFirewallRule -Name "RDP_NGROK_TCP" -DisplayName "RDP via Ngrok (TCP)" -Protocol TCP -LocalPort 3389 -Action Allow
        
        # Restart service
        Restart-Service TermService -Force
        Write-Host "‚úÖ RDP dikonfigurasi"
      shell: pwsh

    - name: Create RDP User
      run: |
        $username = "GH-User"
        $password = ConvertTo-SecureString "Github@RDP-2024!" -AsPlainText -Force
        
        # Hapus user jika sudah ada
        if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
          Remove-LocalUser -Name $username
        }
        
        # Buat user baru
        New-LocalUser -Name $username -Password $password -AccountNeverExpires
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username
        
        Write-Host "‚úÖ User dibuat: $username"
      shell: pwsh

    - name: Start Ngrok Tunnel
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        # Autentikasi
        ./ngrok/ngrok config add-authtoken $env:NGROK_AUTH_TOKEN
        
        # Jalankan Ngrok di background
        Start-Process -FilePath "./ngrok/ngrok.exe" -ArgumentList "tcp 3389 --log=stdout" -RedirectStandardOutput ngrok.log -PassThru
        
        # Tunggu tunnel aktif
        $timeout = 60  # 60 detik timeout
        $startTime = Get-Date
        while (-not (Test-Path ngrok.log) {
          if (((Get-Date) - $startTime).TotalSeconds -gt $timeout) {
            Write-Error "‚ùå Ngrok timeout!"
            exit 1
          }
          Start-Sleep -Seconds 3
        }
        
        # Ekstrak URL dari log
        $tcpUrl = Get-Content ngrok.log | Select-String "started tunnel" | ForEach-Object { 
          if ($_ -match 'url=tcp://(.+)\s') { $matches[1] }
        }
        
        if (-not $tcpUrl) {
          Write-Error "‚ùå Gagal mendapatkan URL Ngrok"
          Get-Content ngrok.log | Write-Host
          exit 1
        }
        
        Write-Host "========================================"
        Write-Host "üåê RDP TUNNEL BERHASIL DIBUAT"
        Write-Host "Alamat: $tcpUrl"
        Write-Host "Username: GH-User"
        Write-Host "Password: Github@RDP-2024!"
        Write-Host "========================================"
      shell: pwsh

    - name: Keep Session Alive
      run: while ($true) { Start-Sleep -Seconds 3600 }
      shell: pwsh
