name: Stable RDP via Ngrok

on:
  workflow_dispatch:

jobs:
  rdp_setup:
    runs-on: windows-latest

    steps:
    - name: Cleanup Previous Files
      run: |
        Remove-Item -Path ngrok, ngrok.zip -Recurse -Force -ErrorAction SilentlyContinue
      shell: pwsh

    - name: Download & Extract Ngrok
      run: |
        # URL resmi Ngrok yang telah diverifikasi
        $ngrokUrl = "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip"
        
        # Fix TLS protocol
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        
        # Download dengan retry
        $retryCount = 0
        $maxRetries = 3
        do {
          try {
            Invoke-WebRequest -Uri $ngrokUrl -OutFile ngrok.zip -TimeoutSec 30
            break
          } catch {
            $retryCount++
            if ($retryCount -ge $maxRetries) {
              Write-Error "üö® Gagal download Ngrok setelah $maxRetries percobaan"
              exit 1
            }
            Write-Host "üîÑ Retry download ($retryCount/$maxRetries)..."
            Start-Sleep -Seconds 5
          }
        } while ($true)

        # Ekstrak dengan PowerShell
        New-Item -Path ngrok -ItemType Directory -Force
        Expand-Archive -Path ngrok.zip -DestinationPath ngrok -Force
        
        # Validasi ekstraksi
        if (-not (Test-Path ngrok/ngrok.exe)) {
          Write-Error "‚ùå Gagal ekstrak Ngrok!"
          Get-ChildItem ngrok | Write-Host
          exit 1
        }
        Write-Host "‚úÖ Ngrok sukses diinstall"
      shell: pwsh

    - name: Configure RDP
      run: |
        # Nonaktifkan NLA
        Set-ItemProperty "HKLM:\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" -Name "UserAuthentication" -Value 0
        
        # Aktifkan RDP
        Set-ItemProperty "HKLM:\System\CurrentControlSet\Control\Terminal Server" -Name "fDenyTSConnections" -Value 0
        
        # Firewall rules
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        New-NetFirewallRule -Name "RDP_NGROK" -DisplayName "RDP via Ngrok" -Protocol TCP -LocalPort 3389 -Action Allow
        
        # Restart service
        Restart-Service TermService -Force
      shell: pwsh

    - name: Create User
      run: |
        $user = "WinUser"
        $password = ConvertTo-SecureString "SecurePass123!" -AsPlainText -Force
        
        # Hapus user lama
        if (Get-LocalUser -Name $user -ErrorAction SilentlyContinue) {
          Remove-LocalUser -Name $user
        }
        
        # Buat user baru
        New-LocalUser -Name $user -Password $password -AccountNeverExpires
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member $user
      shell: pwsh

    - name: Start Ngrok Tunnel
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        # Autentikasi
        ./ngrok/ngrok config add-authtoken $env:NGROK_AUTH_TOKEN
        
        # Jalankan Ngrok dengan logging
        Start-Process -FilePath "./ngrok/ngrok.exe" -ArgumentList "tcp 3389 --log=stdout" -RedirectStandardOutput ngrok.log -NoNewWindow
        
        # Tunggu tunnel aktif
        $tunnelUrl = $null
        $timeout = 60 # detik
        $timer = [Diagnostics.Stopwatch]::StartNew()
        
        while ($timer.Elapsed.TotalSeconds -lt $timeout) {
          if (Test-Path ngrok.log) {
            $tunnelUrl = Get-Content ngrok.log | Select-String -Pattern "tcp://(.+)" | ForEach-Object { $_.Matches.Groups[1].Value }
            if ($tunnelUrl) { break }
          }
          Start-Sleep -Seconds 2
        }
        
        if (-not $tunnelUrl) {
          Write-Error "‚ùå Gagal membuat tunnel"
          Get-Content ngrok.log
          exit 1
        }
        
        Write-Host "=================== RDP INFO ==================="
        Write-Host "Alamat: $tunnelUrl"
        Write-Host "User: WinUser"
        Write-Host "Password: SecurePass123!"
        Write-Host "================================================"
      shell: pwsh

    - name: Maintain Connection
      run: while ($true) { Start-Sleep -Seconds 3600 }
      shell: pwsh
