name: RDP via Ngrok

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: 🔽 Download & Extract Ngrok
        run: |
          Write-Host "🚀 Downloading Ngrok..."
          curl -Lo ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip

          if (-Not (Test-Path "ngrok.zip")) {
            Write-Host "❌ ERROR: Ngrok download failed!"
            exit 1
          }

          Write-Host "✅ Ngrok downloaded successfully!"

          Write-Host "📦 Extracting Ngrok..."
          Expand-Archive -Path "ngrok.zip" -DestinationPath "ngrok" -Force

          if (-Not (Test-Path ".\ngrok\ngrok.exe")) {
            Write-Host "❌ ERROR: Ngrok executable not found after extraction!"
            exit 1
          }

          Write-Host "✅ Ngrok extracted successfully!"
        shell: pwsh

      - name: 🔑 Authenticate Ngrok
        run: .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        shell: pwsh

      - name: 🎛 Enable Remote Desktop
        run: |
          Write-Host "🔓 Enabling RDP access..."
          # Aktifkan RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          # Izinkan koneksi melalui firewall
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          # Aktifkan UserAuthentication
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Write-Host "✅ Remote Desktop enabled!"
        shell: pwsh

      - name: 🛠 Set RDP Password
        run: |
          Write-Host "🔑 Setting RDP password..."
          $Password = ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force
          Set-LocalUser -Name "runneradmin" -Password $Password
          Write-Host "✅ RDP password set!"
        shell: pwsh

      - name: 🚀 Start Ngrok Tunnel
        run: |
          Write-Host "🚀 Starting Ngrok tunnel..."
          Start-Process -NoNewWindow -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389"
        shell: pwsh

      - name: ⏳ Wait for Ngrok to Initialize
        run: Start-Sleep -Seconds 10
        shell: pwsh

      - name: 🌐 Get Ngrok Tunnel Info
        run: |
          Write-Host "🔎 Fetching Ngrok tunnel details..."
          $tunnels = (Invoke-WebRequest -UseBasicParsing -Uri http://127.0.0.1:4040/api/tunnels | ConvertFrom-Json).tunnels
          $ngrok_tunnel = $tunnels | Where-Object { $_.proto -eq "tcp" }
          if (-Not $ngrok_tunnel.public_url) {
            Write-Host "❌ ERROR: Failed to fetch Ngrok tunnel URL!"
            exit 1
          }
          Write-Host "✅ Ngrok tunnel established!"
          Write-Host "🌍 RDP Address: $($ngrok_tunnel.public_url)"
          Write-Host "👤 Username: runneradmin"
          Write-Host "🔑 Password: P@ssw0rd!"
        shell: pwsh

      - name: 🛡 Keep Session Alive
        run: |
          Write-Host "⏳ Keeping session alive..."
          while ($true) { Start-Sleep -Seconds 3600 }
        shell: pwsh
