name: RDP via Ngrok (Error 0x4 Fix)

on:
  workflow_dispatch:

jobs:
  rdp_setup:
    runs-on: windows-latest

    steps:
    - name: Cleanup & Prep
      run: |
        Remove-Item -Path ngrok, ngrok.zip -Recurse -Force -ErrorAction SilentlyContinue
      shell: pwsh

    - name: Install Ngrok
      run: |
        [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
        Invoke-WebRequest "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile ngrok.zip
        Expand-Archive ngrok.zip -DestinationPath ngrok -Force
        if (-not (Test-Path ngrok/ngrok.exe)) { exit 1 }
      shell: pwsh

    - name: Full RDP Configuration
      run: |
        # 1. Registry Settings
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server" /v fDenyTSConnections /t REG_DWORD /d 0 /f
        reg add "HKLM\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp" /v UserAuthentication /t REG_DWORD /d 0 /f

        # 2. Advanced Firewall Rules
        netsh advfirewall firewall add rule name="RDP-Ngrok-TCP" dir=in protocol=TCP localport=3389 action=allow profile=any
        netsh advfirewall firewall add rule name="RDP-Ngrok-UDP" dir=in protocol=UDP localport=3389 action=allow profile=any

        # 3. Service Configuration
        Set-Service TermService -StartupType Automatic
        Start-Service TermService
        sc.exe config TermService start= auto
        net start TermService

        # 4. Network Interface Check
        Get-NetConnectionProfile | Set-NetConnectionProfile -NetworkCategory Private
      shell: cmd

    - name: User Management
      run: |
        $Password = ConvertTo-SecureString "P@ssw0rdRDP!2024" -AsPlainText -Force
        New-LocalUser -Name "RDUser" -Password $Password -AccountNeverExpires
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "RDUser"
        Set-LocalUser -Name "RDUser" -PasswordNeverExpires 1
      shell: pwsh

    - name: Start Ngrok (Multi-Region)
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      run: |
        ./ngrok/ngrok config add-authtoken $env:NGROK_AUTH_TOKEN
        
        # Start with multiple region attempts
        $regions = @("us", "eu", "ap")
        foreach ($region in $regions) {
          Start-Process ./ngrok/ngrok.exe -ArgumentList "tcp 3389 --region=$region --log=stdout" -RedirectStandardOutput ngrok_$region.log
          Start-Sleep -Seconds 15
          
          $tunnel = Get-Content ngrok_$region.log | Select-String "tcp://(.+)" | % { $_.Matches.Groups[1].Value }
          if ($tunnel) {
            Write-Host "##[group]ðŸš€ TUNNEL ACTIVE ($region)"
            Write-Host "Address: $tunnel"
            Write-Host "User: RDUser"
            Write-Host "Password: P@ssw0rdRDP!2024"
            Write-Host "##[endgroup]"
            exit 0
          }
        }
        exit 1
      shell: pwsh

    - name: Keep Alive
      run: ping -t localhost
      shell: cmd
