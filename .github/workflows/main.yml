name: RDP with Ngrok

on:
  - push
  - workflow_dispatch

jobs:
  setup_rdp:
    runs-on: windows-latest

    steps:
      # 1️⃣ Download & Extract Ngrok
      - name: Download & Extract Ngrok
        run: |
          Write-Host "🚀 Downloading Ngrok..."
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Expand-Archive -Path "ngrok.zip" -DestinationPath "ngrok"
          if (-Not (Test-Path "ngrok\ngrok.exe")) {
            Write-Host "❌ ERROR: Ngrok executable not found!"
            exit 1
          }
          Write-Host "✅ Ngrok downloaded & extracted!"
        shell: pwsh

      # 2️⃣ Set Ngrok Auth Token
      - name: Set Ngrok Auth Token
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
          Write-Host "✅ Ngrok authentication successful!"
        shell: pwsh

      # 3️⃣ Pastikan Layanan RDP Berjalan dengan Baik
      - name: Enable & Restart Remote Desktop Services
        run: |
          Write-Host "🔧 Enabling RDP services..."
          
          # Aktifkan layanan RDP
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0

          # Pastikan firewall mengizinkan RDP
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"

          # Nonaktifkan User Authentication (NLA) agar lebih kompatibel
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 0

          # Pastikan encryption RDP dalam mode kompatibel
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "SecurityLayer" -Value 0

          # Restart service RDP agar perubahan berlaku
          Restart-Service -Name TermService -Force

          # Cek apakah RDP berjalan
          $rdpStatus = Get-Service -Name TermService | Select-Object -ExpandProperty Status
          if ($rdpStatus -ne "Running") {
            Write-Host "❌ ERROR: RDP Service is not running!"
            exit 1
          }

          Write-Host "✅ RDP services enabled & running!"
        shell: pwsh

      # 4️⃣ Atur Password User "runneradmin"
      - name: Set Admin Password
        run: |
          $password = ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force
          Set-LocalUser -Name "runneradmin" -Password $password
          Write-Host "✅ Admin password set!"
        shell: pwsh

      # 5️⃣ **Menunggu RDP Siap**
      - name: Wait for RDP to fully initialize
        run: |
          Write-Host "⏳ Waiting for RDP to fully initialize..."
          Start-Sleep -Seconds 15
          Write-Host "✅ RDP should be ready now!"
        shell: pwsh

      # 6️⃣ Jalankan Ngrok di Background & Ambil URL RDP
      - name: Start Ngrok Tunnel
        run: |
          Write-Host "🚀 Starting Ngrok tunnel..."
          Start-Process -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389" -NoNewWindow
          Start-Sleep -Seconds 10  # Tunggu Ngrok berjalan

          # Ambil URL Ngrok untuk koneksi RDP
          $ngrok_url = (Invoke-WebRequest -Uri http://127.0.0.1:4040/api/tunnels | ConvertFrom-Json).tunnels[0].public_url
          
          # Simpan URL dalam file untuk memudahkan akses
          echo "🌍 Server Address: $ngrok_url" > ngrok_rdp.txt
          echo "🧑‍💻 Username: runneradmin" >> ngrok_rdp.txt
          echo "🔑 Password: P@ssw0rd!" >> ngrok_rdp.txt

          Write-Host "✅ Ngrok Tunnel Ready!"
          Write-Host "🌍 Server Address: $ngrok_url"
          Write-Host "🧑‍💻 Username: runneradmin"
          Write-Host "🔑 Password: P@ssw0rd!"
        shell: pwsh

      # 7️⃣ Menampilkan URL Ngrok ke Output Log GitHub Actions
      - name: Show RDP Credentials
        run: cat ngrok_rdp.txt
        shell: pwsh

      # 8️⃣ **Keep Alive (Agar Workflow Tidak Berhenti)**
      - name: Keep Alive
        run: |
          Write-Host "🟢 Keeping session alive..."
          while ($true) { Start-Sleep -Seconds 3600 }
        shell: pwsh
