name: RDP via Ngrok

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest
    steps:
    
    - name: 🔽 Download & Extract Ngrok
      run: |
        Write-Host "🚀 Downloading Ngrok..."
        curl -Lo ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip

        if (-Not (Test-Path "ngrok.zip")) {
          Write-Host "❌ ERROR: Ngrok download failed!"
          exit 1
        }

        Write-Host "✅ Ngrok downloaded successfully!"

        Write-Host "📦 Extracting Ngrok..."
        7z x ngrok.zip -o. -y

        if (-Not (Test-Path ".\ngrok.exe")) {
          Write-Host "❌ ERROR: Ngrok executable not found after extraction!"
          exit 1
        }

        Write-Host "✅ Ngrok extracted successfully!"
      shell: pwsh

    - name: 🔑 Authenticate Ngrok
      run: .\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
      env:
        NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
      shell: pwsh

    - name: 🎛 Enable Remote Desktop
      run: |
        Write-Host "🔓 Enabling RDP access..."
        
        # Mengaktifkan RDP di Registry
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
        
        # Mengaktifkan aturan firewall untuk RDP
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        
        # Memastikan User Authentication diaktifkan
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1

        Write-Host "✅ Remote Desktop enabled!"
      shell: pwsh

    - name: 🛠 Set RDP Password
      run: |
        Write-Host "🔑 Setting RDP password..."
        $Password = ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force
        Set-LocalUser -Name "runneradmin" -Password $Password
        Write-Host "✅ RDP password set!"
      shell: pwsh

    - name: 🔄 Start Ngrok Tunnel
      run: |
        Write-Host "🚀 Starting Ngrok tunnel..."
        Start-Process -NoNewWindow -FilePath ".\ngrok.exe" -ArgumentList "tcp 3389"
      shell: pwsh

    - name: ⏳ Wait for Ngrok to Initialize
      run: Start-Sleep -s 10
      shell: pwsh

    - name: 🌐 Get Ngrok Tunnel Info
      run: |
        Write-Host "🔎 Fetching Ngrok tunnel details..."
        
        $ngrok_tunnel = (Invoke-WebRequest -UseBasicParsing -Uri http://127.0.0.1:4040/api/tunnels | ConvertFrom-Json).tunnels | Where-Object {$_.proto -eq "tcp"}

        if (-Not $ngrok_tunnel.public_url) {
          Write-Host "❌ ERROR: Failed to fetch Ngrok tunnel URL!"
          exit 1
        }

        Write-Host "✅ Ngrok tunnel established!"
        Write-Host "🌍 RDP Address: $($ngrok_tunnel.public_url)"
        Write-Host "👤 Username: runneradmin"
        Write-Host "🔑 Password: P@ssw0rd!"
      shell: pwsh

    - name: 🛡 Keep Session Alive
      run: |
        Write-Host "⏳ Keeping session alive..."
        while ($true) { Start-Sleep -s 3600 }
      shell: pwsh
