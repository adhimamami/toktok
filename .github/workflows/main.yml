name: RDP via Ngrok

on:
  workflow_dispatch

jobs:
  setup_rdp:
    runs-on: windows-latest

    steps:
      - name: üîΩ Download & Extract Ngrok
        run: |
          Write-Host "üöÄ Downloading Ngrok..."
          curl -Lo ngrok.zip https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip

          if (-Not (Test-Path "ngrok.zip")) {
            Write-Host "‚ùå ERROR: Ngrok download failed!"
            exit 1
          }

          Write-Host "‚úÖ Ngrok downloaded successfully!"

          Write-Host "üì¶ Extracting Ngrok..."
          Expand-Archive -Path "ngrok.zip" -DestinationPath "ngrok" -Force

          if (-Not (Test-Path ".\ngrok\ngrok.exe")) {
            Write-Host "‚ùå ERROR: Ngrok executable not found after extraction!"
            exit 1
          }

          Write-Host "‚úÖ Ngrok extracted successfully!"
        shell: pwsh

      - name: üîë Authenticate Ngrok
        run: |
          .\ngrok\ngrok.exe authtoken $Env:NGROK_AUTH_TOKEN
          Write-Host "‚úÖ Ngrok authentication successful!"
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        shell: pwsh

      - name: üéõ Enable Remote Desktop
        run: |
          Write-Host "üîß Configuring Remote Desktop..."
          # Aktifkan RDP di registry
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          # Izinkan koneksi melalui firewall
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          # Jika perlu, sesuaikan UserAuthentication (default 1 berarti NLA aktif)
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Write-Host "‚úÖ Remote Desktop enabled!"
        shell: pwsh

      - name: üõ† Set RDP Password
        run: |
          Write-Host "üîë Setting RDP password for runneradmin..."
          $Password = ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force
          Set-LocalUser -Name "runneradmin" -Password $Password
          Write-Host "‚úÖ Password set to P@ssw0rd!"
        shell: pwsh

      - name: üöÄ Start Ngrok Tunnel
        run: |
          Write-Host "üöÄ Starting Ngrok tunnel on TCP port 3389..."
          Start-Process -NoNewWindow -FilePath ".\ngrok\ngrok.exe" -ArgumentList "tcp 3389"
        shell: pwsh

      - name: ‚è≥ Wait for Ngrok Tunnel to be Ready
        run: |
          $maxRetries = 30
          $tunnelUrl = $null
          for ($i = 1; $i -le $maxRetries; $i++) {
              try {
                  $response = Invoke-WebRequest -Uri http://127.0.0.1:4040/api/tunnels -UseBasicParsing -TimeoutSec 5 | ConvertFrom-Json
                  $tcpTunnel = $response.tunnels | Where-Object { $_.proto -eq "tcp" }
                  if ($tcpTunnel -and $tcpTunnel.public_url) {
                      $tunnelUrl = $tcpTunnel.public_url
                      Write-Host "‚úÖ Ngrok tunnel established on attempt $i."
                      break
                  }
              }
              catch {
                  Write-Host "Waiting for Ngrok tunnel... attempt $i/$maxRetries"
              }
              Start-Sleep -Seconds 5
          }
          if (-not $tunnelUrl) {
              Write-Host "‚ùå ERROR: Ngrok tunnel not available after waiting."
              exit 1
          }
          # Simpan informasi RDP di file
          $info = @"
üåç RDP Address: $tunnelUrl
üë§ Username: runneradmin
üîë Password: P@ssw0rd!
"@
          $info | Out-File -FilePath "rdp_info.txt" -Encoding utf8
          Write-Host $info
        shell: pwsh

      - name: üìÑ Display RDP Info
        run: Get-Content -Path "rdp_info.txt"
        shell: pwsh

      - name: üõ° Keep Session Alive
        run: |
          Write-Host "‚è≥ Keeping session alive. Press Ctrl+C to end."
          while ($true) { Start-Sleep -Seconds 3600 }
        shell: pwsh
