name: RDP with Ngrok

on:
  - push
  - workflow_dispatch

jobs:
  setup_rdp:
    runs-on: windows-latest

    steps:
      # 1Ô∏è‚É£ Download Ngrok
      - name: Download Ngrok
        run: |
          Invoke-WebRequest -Uri "https://bin.equinox.io/c/bNyj1mQVY4c/ngrok-v3-stable-windows-amd64.zip" -OutFile "ngrok.zip"
          Write-Host "‚úÖ Ngrok ZIP downloaded!"
        shell: pwsh

      # 2Ô∏è‚É£ Ekstrak Ngrok
      - name: Extract Ngrok
        run: |
          Expand-Archive -Path "ngrok.zip" -DestinationPath "ngrok"
          Write-Host "‚úÖ Ngrok extracted!"
        shell: pwsh

      # 3Ô∏è‚É£ Pastikan Ngrok Terekstrak dengan Benar
      - name: Check Ngrok Executable
        run: |
          if (-Not (Test-Path "ngrok\ngrok.exe")) {
            Write-Host "‚ùå ERROR: Ngrok executable not found!"
            exit 1
          } else {
            Write-Host "‚úÖ Ngrok executable found!"
          }
        shell: pwsh

      # 4Ô∏è‚É£ Set Ngrok Auth Token
      - name: Set Ngrok Auth Token
        env:
          NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}
        run: |
          .\ngrok\ngrok.exe config add-authtoken $Env:NGROK_AUTH_TOKEN
          Write-Host "‚úÖ Ngrok authentication successful!"
        shell: pwsh

      # 5Ô∏è‚É£ Aktifkan Remote Desktop (RDP)
      - name: Enable Remote Desktop
        run: |
          Write-Host "üîß Configuring RDP..."
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
          Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
          #  Tidak perlu mengatur UserAuthentication, biarkan default (0) untuk Network Level Authentication (NLA). Lebih aman.
          # Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
          Write-Host "‚úÖ RDP enabled!"
        shell: pwsh

      # 6Ô∏è‚É£ Buat User Baru & Atur Password  (Lebih Aman)
      - name: Create User and Set Password
        run: |
          $username = "RDPUser" # Ganti jika perlu
          $password = ConvertTo-SecureString -AsPlainText "P@ssw0rd123!" -Force # Password Kuat!
          
          # Cek jika user sudah ada
          if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
              Write-Host "User '$username' already exists.  Updating password..."
              Set-LocalUser -Name $username -Password $password
          } else {
              New-LocalUser -Name $username -Password $password -Description "RDP Access User" -PasswordNeverExpires
              Write-Host "User '$username' created."
          }
          
          # Tambahkan user ke group Remote Desktop Users
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username

          Write-Host "‚úÖ User created/updated and added to Remote Desktop Users group!"
          Write-Host "üßë‚Äçüíª Username: $username"
          Write-Host "üîë Password: P@ssw0rd123!" # Tampilkan password di log (untuk kemudahan, tapi HATI-HATI di lingkungan produksi!)
        shell: pwsh
        
      # 7Ô∏è‚É£ Jalankan Ngrok di Background & Ambil URL
      - name: Start Ngrok Tunnel
        run: |
          Write-Host "üöÄ Starting Ngrok tunnel..."
          # Gunakan Start-Job untuk menjalankan Ngrok di background *tanpa* memblokir
          $ngrokJob = Start-Job -ScriptBlock {
              .\ngrok\ngrok.exe tcp 3389
          }
          
          Start-Sleep -Seconds 15  # Beri waktu lebih untuk Ngrok benar-benar jalan

          # Ambil URL Ngrok, loop sampai dapat
          $ngrok_url = $null
          $attempts = 0
          while (-not $ngrok_url -and $attempts -lt 10) {  # Coba maksimal 10 kali
              try {
                  $ngrok_url = (Invoke-WebRequest -Uri http://127.0.0.1:4040/api/tunnels -TimeoutSec 5).Content | ConvertFrom-Json | Select-Object -ExpandProperty tunnels | Where-Object {$_.public_url -like "tcp://*"} | Select-Object -ExpandProperty public_url
              }
              catch {
                  Write-Host "Waiting for Ngrok tunnel..."
              }
              Start-Sleep -Seconds 5
              $attempts++
          }
            
          if (-not $ngrok_url) {
              Write-Host "‚ùå ERROR: Failed to retrieve Ngrok URL after multiple attempts."
              exit 1  # Hentikan workflow jika gagal
          }

          Write-Host "‚úÖ Ngrok Tunnel Ready!"
          Write-Host "üåç Server Address: $ngrok_url"
          
        shell: pwsh



      # 8Ô∏è‚É£ Keep Alive (Agar Workflow Tidak Berhenti)
      - name: Keep Alive
        run: |
          Write-Host "üü¢ Keeping session alive..."
          while ($true) { Start-Sleep -Seconds 3600 }
        shell: pwsh
